#####################################
Replace-TitleSheet.ps1開発メモ
#####################################

概要
========
ファイルで指定されたExcelファイル群の「表紙」シートの変更を行うps1スクリプト。
通常動作では、既に置換済みである場合はファイルの変更は行わない安心設計（のはず）。

タイトル、バージョン、日付、組織の置換機能を持つ。

オプション
=============

* ``-ReplaceFileList filename``: 置換対象のエクセルファイルのリストおよび置換内容が書かれたfilenameを指定する。各行のフォーマットはexcelfilename,titleFrom,titleTo,dateFrom,dateTo,orgFrom,orgToをTSVで記載したものとなる。デフォルト値は ``.\replaceFile.lst``。

* ``-Force``: 通常は表紙置換内容のFromが一致しなかったり、既に置換済みで判断された場合は置換を行わない。しかし、本オプションを利用した場合は、テンプレートシート（後述のTmplTitleSheetオプションで指定）内の表紙シートをベースに強制置換する。
* ``-Debug``: 本オプションを指定して実行した場合、Excelウィンドウを表示しながら動作するようになる。
* ``-Dryrun``: 実際に変換が発生するかどうかだけを表示し、実際の変更は行わない。Forceオプションと組み合わせると表紙シートの有無だけを表示する。
* ``-TmplTitleSheet filename``: Forceオプション指定時の差し替え用に使われる「表紙」シートを持つエクセルファイルを指定する。このシート内のTITLE_SOURCE,VERSION_SOURCE,DATE_SOURCE,ORGANIZATION_SOURCEというテキストがそれぞれ置換される。

Disclaimer
=================
* Powershell 2.0 と KingOffice で動作確認したのでExcelだと何か問題があるかもしれない。
* ExcelをCom経由で操作して動作するためExcelがインストールされていない環境では動作しない。

仕様メモ
=================

このあたりバッドノウハウ的な対処をしている部分もあるかもしれないので注意。

* 既に変更対象になっている場合は変更をしない。

  + Forceオプションをつけた場合は問答無用で表紙シートをテンプレートから作成する。

* 日付とバージョンのFromだけ、正規表現で記載する必要がある。というか、正規表現が使える。（内部的にはReplace-From-To funcの呼び出し時に regexp オプションを指定するだけで正規表現になる。)

  + 改行とかの扱いをテストするのがだるかったのでタイトル・組織では正規表現を使わなかっただけ。あまり深い意味は無い。
  + vbaなら定数で参照できそうな値がどうにも取得できないので定数で行く。(ex. xlCenter = -4108)

* 日付は0 paddingするとうまく動かないので注意。(たとえば1月1日だった 2015/1/1と指定する必要がある。)

* 最初変換対象のセル範囲は UsedRange としていたが、何かの間違いで巨大なエクセルを処理するとPowerShellがハングして恐ろしいので``A1:K12``でハードコーディングしてある。

* たまにエクセルがロックされてしまう事があった。finally区でちゃんとReleaseComObjectしてる。

* Comオブジェクトにファイルを開かせようとすると、実行した場所ではなく実行ユーザのホームディレクトリがカレントに見えるらしいのでフルPATHで無い場合はフルPATHに直す処理をいれている。

* 何も考えずに echo とか write-host cmdletで出力をしている。ちゃんとloggingしたいけどまあ良いか。

* paramの[switch]は指定していないときに$Falseが入っているのかちゃんと調べていないので、Bool値受け渡し用の変数を設定している（が、ちゃんと仕様を調べて無駄な変数とか無くせるなら無くしたい。）

vim: ft=rst tw=0:
